#+STARTUP: showall hidestars
#+TITLE: Ubuntu
#+AUTHOR: Q Do

* Starting Ubuntu 20.04 LTS

** Update/upgrade system

   #+begin_src  sh
     sudo apt update

     sudo apt upgrade

     sudo ubuntu-drivers autoinstall
   #+end_src

** Install a clip board manager and add shortcut for copy/paste

   #+begin_src  sh
     sudo apt install xclip

     sudo apt install copyq
   #+end_src

   - In =copyq=, change shortcut for *Show/hide main window* to *Ctrl+Super+Y*

** Change Keyboard shortcuts in Settings

*** Recommend change all Ctr+Alt to Ctr+Super to avoid conflict in other applications
    - Close window: Ctrl+Super+Escape
    - Maximize window: Ctrl+Super+i
    - Restore Window: Ctrl+Super+k
    - View split on left: Ctrl+Super+j
    - View split on right: Ctrl+Super+l
    - Move to workspace above: Super+[
    - Move to workspace below: Super+]
    - Copy a screenshot of an window to clipboard: Ctr+Super+W
    - Copy a screenshot of an area to clipboard: Ctr+Super+C
    - Switch windows of an application: Super+Backlash
    - Launch terminal: Ctr+Super+T
    - Lock screen: Super+Backspace
    - Suspend: Ctr+Super+Backspace
      #+begin_src shell
        systemctl suspend
      #+end_src

** Mouse: default natural scrolling

   - Add =Option "NaturalScrolling" "true"= to =/usr/share/X11/xorg.conf.d/40-libinput.conf= and reboot

   #+begin_src conf
     Section "InputClass"
       Identifier "libinput pointer catchall"
       MatchIsPointer "on"
       MatchDevicePath "/dev/input/event*"
       Driver "libinput"
       Option "NaturalScrolling" "true"
     EndSection
   #+end_src

   - Note: Only work with Xorg

*** Gnome tweaks

    #+begin_src shell
     sudo apt install dconf-tools

     # Change dock to the bottom and center
     gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false
     gsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOM
     gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode FIXED
     gsettings set org.gnome.shell.extensions.dash-to-dock dash-max-icon-size 64
     gsettings set org.gnome.shell.extensions.dash-to-dock unity-backlit-items true

     # Change Nautilus navigation bar to path bar
     gsettings set org.gnome.nautilus.preferences always-use-location-entry true
     gsettings set org.gnome.nautilus.preferences default-sort-order 'type'
    #+end_src

    - Note: In case of messing up, run =gsettings reset [config]=
    - Note: This can also be accessed in =dconf Editor= app

** Install GNU Emacs

   #+begin_src shell
     sudo apt update

     sudo apt install build-essential texinfo libx11-dev libxpm-dev\
          libjpeg-dev libpng-dev libgif-dev libtiff-dev libncurses-dev\
          libxpm-dev libgtk-3-dev libgnutls28-dev\
          automake autoconf

     wget https://ftp.gnu.org/pub/gnu/emacs/emacs-26.3.tar.gz

     tar -zxvf emacs-26.3.tar.gz

     cd emacs-26.3

     ./configure

     # If a package is missing during `./configure`,
     # search for it using `apt search` or `apt-cache search` and install using `apt install`
     sudo apt search 'libgnutls.*-dev'
     sudo apt search 'libgtk.*-dev'

     make

     # if `make` completes successfully, install emacs
     # By default, Emacs is installed in "/usr/local". To actually install files
     sudo make install

     # Note that `make install` will overwrite "/usr/local/bin/emacs"
     # and any Emacs Info files that might be in "/usr/local/share/info/"

     # For more info, https://www.gnu.org/software/emacs/manual/html_node/efaq/Installing-Emacs.html
   #+end_src

** Change Desktop and Lockscreen background

** Change terminal shortcuts

   Zoom In: Ctrl+=
   Zoom Out: Ctrl+-
   New Tab: Ctrl+T
   Close Tab: Ctrl+W
   Copy: Alt+W
   Paste: Ctrl+Y
   Next Tap: Ctrl+[
   Previous Tap: Ctr+]

** Install and set up Git

   #+begin_src  bash
     sudo apt install git
     git config --global user.email "quang.do.se@gmail.com"
     git config --global user.name "Q Do"

     # Create rsa key
     ssh-keygen -t rsa -b 4096 -C "quang.do.se@gmail.com"

     # Copy public key
     cat ~/.ssh/id_rsa.pub | xclip -sel c

     # If error 'sign_and_send_pubkey: signing failed: agent refused operation'
     sudo chmod -R 400 ~/.ssh
     ssh-add

     # Update to latest version
     sudo add-apt-repository -y ppa:git-core/ppa
     sudo apt update
     sudo apt install git git-core bash-completion -y
   #+end_src

** Install Java JDK

   #+begin_src shell
     # Install default latest version
     sudo apt install default-jdk

     # Install specific version
     sudo apt install openjdk-8-jdk

     # Set Java 8 as default Java
     sudo update-alternatives --set java \
          $(update-alternatives --list java | grep -E '\-8(\.[[:digit:]]*)?\-')
   #+end_src

** Install Node.js

   #+begin_src shell
     sudo apt install -y nodejs npm
   #+end_src

** Install docker

   #+begin_src shell
     # Set up the repository
     sudo apt update
     sudo apt upgrade
     sudo apt install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
     sudo apt remove docker docker-engine docker.io containerd runc
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
     sudo apt-key fingerprint 0EBFCD88
     sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

     # Install docker engine - community
     sudo apt update
     sudo apt install -y docker-ce docker-ce-cli containerd.io

     # Install docker-compose
     sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
     sudo chmod +x /usr/local/bin/docker-compose

     # Add user to docker group to be able to run docker
     sudo groupadd docker
     sudo usermod -aG docker ${USER}

     # login to the docker group
     newgrp docker
   #+end_src

** Install autokey-gtk - great tool for key binding in Xorg

   #+begin_src shell
     sudo apt install autokey-gtk
   #+end_src

** Set up key mapping XKB

   #+begin_src shell
     # Get current configuration
     xkbcomp -xkb $DISPLAY output.xkb

     # After changing output.xkb, save and reload keyboard configurations
     xkbcomp -w 0 output.xkb $DISPLAY

     # See real live mapping
     xev
   #+end_src

   Navigation:
   - up
   - down
   - left
   - right
   - page
   - up
   - page
   - down
   - home
   - end
   - Atl-F -> Alt-right
   - Alt-B -> Alt-left

   Modifiers:
   - Caplocks -> Control
   - Enter -> Control
   - Control-M -> Enter

   - issue with xkb reset after suspend or wake up from suspense

   - change xkb directly in `/usr/share/X11/xkb/`

** Open Terminal on start up

   - Press the Super key (windows key).
   - Type "Startup Applications"
   - Click on the Startup Applications option
   - Click "Add"
   - In the "name" field, type Terminal
   - In the "command" field, type "gnome-terminal --full-screen"
   - Click "Add"

** Set up bash profile

** Clean up

   #+begin_src shell
     rm -rf /var/lib/apt/lists/*
   #+end_src

** Enable Emacs keybinding in app

   #+begin_src shell
     gsettings set org.gnome.desktop.interface gtk-key-theme "Emacs"

     # switch back
     gsettings set org.gnome.desktop.interface gtk-key-theme "Default"

     # Or edit in
     /usr/share/themes/Emacs/gtk-3.0/gtk-keys.css
   #+end_src

** Add user

   #+begin_src shell
     # Add new user
     sudo adduser [username]

     # Add user to sudo group
     usermod -aG sudo [username]

     # Delete user
     sudo deluser --remove-home [username]

     # Enable root password
     sudo passwd root

     # Disable root account
     sudo passed -dl root
   #+end_src

** Setting telex

   #+begin_src  sh
     # install unikey
     sudo apt install ibus-unikey

     ibus-daemon -Rd

     im-config

     # choose "Intelligent Input Bus" and restart

     # Go to "Region & Language" in Settings and search for Unikey
   #+end_src

** Add start up command

   # Search for 'Startup Applications Preferences' in Settings
   # Add 'gnome-terminal --full-screen'

** Check which graphic card is being used

   #+begin_src shell
     lspci -k | grep -A 2 -i "VGA"

     lshw -C video
   #+end_src

** Install JDK

   #+begin_src shell
     sudo apt install -y default-jdk
   #+end_src

** Google Chrome

   #+begin_src shell
     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

     sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'

     sudo apt update

     sudo apt --only-upgrade install google-chrome-stable

     sudo apt install libnss3

     # kill old hidden chrome processes
     sudo pkill -15 google-chrome
     sudo pkill -15 chrome

     # -15 is SIGTERM signal. Use below command a complete list
     kill -l
   #+end_src

*** Turn off network cache that automatically adds =.com= and =www.= to url

    - Go to Chrome
    - Click *F12*
    - Go to *Network* tab
    - Choose *Disable cache*

** Firefox

*** Adjust smooth scrolling
    - Type =about:config= in address bar
    - Set =mousewheel.min_line_scroll_amount= to 100. This will change the step of the scrolling
    - Set =general.smoothScroll.mouseWheel.durationMaxMS= to 600
    - Set =general.smoothScroll.mouseWheel.durationMinMS= to 400

** Bluetooth update

   #+begin_src shell
     sudo add-apt-repository ppa:bluetooth/bluez
     sudo apt install bluez
   #+end_src

** Install OpenConnect VPN

   #+begin_src shell
     sudo apt -y install openconnect

     sudo openconnect -b [vpn.mydomain.com] -u [username] --authgroup [AdminVPN]
   #+end_src

** Some utility tools

   #+begin_src shell
     # PDF viewer
     sudo apt install evince


     # tree ls
     sudo apt install tree


     # CPU temp and fan speed
     sudo apt install lm-sensors


     # Nice version of top
     sudo npm install gtop -g


     # Nice version of top
     sudo apt install htop


     # Ulauncher for quick search
     sudo add-apt-repository ppa:agornostal/ulaunche
     sudo apt update && sudo apt install ulauncher


     # Install music/video player
     sudo add-apt-repository ppa:rvm/smplayer
     sudo apt update
     sudo apt install mpv smplayer smplayer-themes smplayer-skins


     # Ag search
     sudo apt install silversearcher-ag


     # Virtual Box
     sudo apt remove --purge virtualbox-6.1

     sudo sh -c 'echo "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian <ubuntu-dist> contrib" >> /etc/apt/sources.list'

     wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
     wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -

     # Verify fingerprint
     # gpg version 2 or later
     gpg --dry-run --quiet --import --import-options import-show oracle_vbox_2016.asc | awk 'NR==2 {print $1}' | sed 's/.\{4\}/& /g'

     sudo apt update
     sudo apt install virtualbox-6.1

     # Then download and install virtualbox extension package from the website https://www.virtualbox.org/wiki/


     # Remove package
     sudo apt remove --purge <package>


     # pdflatex
     sudo apt install texlive-latex-base texlive-fonts-recommended texlive-fonts-extra texlive-latex-extra


     # cheese - take photos and videos with your webcam
     sudo apt install cheese

   #+end_src

** Gnome Extensions
   - If =Extensions= app is not available, install it:

     #+begin_src shell
      sudo apt install gnome-shell-extension-prefs
     #+end_src

   - Go to =Extensions= app
   - Disable =Desktop Icons=

** Hide top bar

   #+begin_src shell
      sudo apt install gnome-shell-extension-autohidetopbar
   #+end_src

   - Go to =Extensions= app or =Tweaks= app under =Extensions= tab
   - Enable =Hide Top Bar=
